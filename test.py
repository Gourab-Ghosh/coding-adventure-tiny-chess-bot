import numpy as np

# l = np.array([
#     # Pawn Opening (Y-symmetric)
#      0,  0,  0,  0,  0,  0,  0,  0,
#      50, 50, 50, 50, 50, 50, 50, 50,
#      10, 10, 20, 30, 30, 20, 10, 10,
#      5,  5, 10, 25, 25, 10,  5,  5,
#      0,  0,  0, 20, 20,  0,  0,  0,
#      5, -5,-10,  0,  0,-10, -5,  5,
#      5, 10, 10,-20,-20, 10, 10,  5,
#      0,  0,  0,  0,  0,  0,  0,  0,
    
#     # Pawn Endgame (Y-symmetric)
#      0,  0,  0,  0,  0,  0,  0,  0,
#      50, 50, 50, 50, 50, 50, 50, 50,
#      10, 10, 20, 30, 30, 20, 10, 10,
#      5,  5, 10, 25, 25, 10,  5,  5,
#      0,  0,  0, 20, 20,  0,  0,  0,
#      5, -5,-10,  0,  0,-10, -5,  5,
#      5, 10, 10,-20,-20, 10, 10,  5,
#      0,  0,  0,  0,  0,  0,  0,  0,

#     # Knight Opening (Y-symmetric)
#     -50,-40,-30,-30,-30,-30,-40,-50,
#     -40,-20,  0,  0,  0,  0,-20,-40,
#     -30,  0, 10, 15, 15, 10,  0,-30,
#     -30,  5, 15, 20, 20, 15,  5,-30,
#     -30,  0, 15, 20, 20, 15,  0,-30,
#     -30,  5, 10, 15, 15, 10,  5,-30,
#     -40,-20,  0,  5,  5,  0,-20,-40,
#     -50,-40,-30,-30,-30,-30,-40,-50,

#     # Knight Endgame (Y-symmetric)
#     -50,-40,-30,-30,-30,-30,-40,-50,
#     -40,-20,  0,  0,  0,  0,-20,-40,
#     -30,  0, 10, 15, 15, 10,  0,-30,
#     -30,  5, 15, 20, 20, 15,  5,-30,
#     -30,  0, 15, 20, 20, 15,  0,-30,
#     -30,  5, 10, 15, 15, 10,  5,-30,
#     -40,-20,  0,  5,  5,  0,-20,-40,
#     -50,-40,-30,-30,-30,-30,-40,-50,

#     # Bishop Opening (Y-symmetric)
#     -20,-10,-10,-10,-10,-10,-10,-20,
#     -10,  0,  0,  0,  0,  0,  0,-10,
#     -10,  0,  5, 10, 10,  5,  0,-10,
#     -10,  5,  5, 10, 10,  5,  5,-10,
#     -10,  0, 10, 10, 10, 10,  0,-10,
#     -10, 10, 10, 10, 10, 10, 10,-10,
#     -10,  5,  0,  0,  0,  0,  5,-10,
#     -20,-10,-10,-10,-10,-10,-10,-20,

#     # Bishop Endgame (Y-symmetric)
#     -20,-10,-10,-10,-10,-10,-10,-20,
#     -10,  0,  0,  0,  0,  0,  0,-10,
#     -10,  0,  5, 10, 10,  5,  0,-10,
#     -10,  5,  5, 10, 10,  5,  5,-10,
#     -10,  0, 10, 10, 10, 10,  0,-10,
#     -10, 10, 10, 10, 10, 10, 10,-10,
#     -10,  5,  0,  0,  0,  0,  5,-10,
#     -20,-10,-10,-10,-10,-10,-10,-20,

#     # Rook Opening (Y-symmetric)
#      0,  0,  0,  0,  0,  0,  0,  0,
#      5, 10, 10, 10, 10, 10, 10,  5,
#     -5,  0,  0,  0,  0,  0,  0, -5,
#     -5,  0,  0,  0,  0,  0,  0, -5,
#     -5,  0,  0,  0,  0,  0,  0, -5,
#     -5,  0,  0,  0,  0,  0,  0, -5,
#     -5,  0,  0,  0,  0,  0,  0, -5,
#      0,  0,  0,  5,  5,  0,  0,  0,
    
#     # Rook Endgame (Y-symmetric)
#      0,  0,  0,  0,  0,  0,  0,  0,
#      5, 10, 10, 10, 10, 10, 10,  5,
#     -5,  0,  0,  0,  0,  0,  0, -5,
#     -5,  0,  0,  0,  0,  0,  0, -5,
#     -5,  0,  0,  0,  0,  0,  0, -5,
#     -5,  0,  0,  0,  0,  0,  0, -5,
#     -5,  0,  0,  0,  0,  0,  0, -5,
#      0,  0,  0,  5,  5,  0,  0,  0,

#     # Queen Opening (XY-symmetric)
#     -20,-15,-10, -5, -5,-10,-15,-20,
#     -15,  0,  0,  0,  0,  0,  0,-15,
#     -10,  0,  5,  5,  5,  5,  0,-10,
#      -5,  0,  5,  5,  5,  5,  0, -5,
#      -5,  0,  5,  5,  5,  5,  0, -5,
#     -10,  0,  5,  5,  5,  5,  0,-10,
#     -15,  0,  0,  0,  0,  0,  0,-15,
#     -20,-15,-10, -5, -5,-10,-15,-20,

#     # Queen Endgame (XY-symmetric)
#     -20,-15,-10, -5, -5,-10,-15,-20,
#     -15,  0,  0,  0,  0,  0,  0,-15,
#     -10,  0,  5,  5,  5,  5,  0,-10,
#      -5,  0,  5,  5,  5,  5,  0, -5,
#      -5,  0,  5,  5,  5,  5,  0, -5,
#     -10,  0,  5,  5,  5,  5,  0,-10,
#     -15,  0,  0,  0,  0,  0,  0,-15,
#     -20,-15,-10, -5, -5,-10,-15,-20,

#     # King Opening (Y-symmetric)
#     -30,-40,-40,-50,-50,-40,-40,-30,
#     -30,-40,-40,-50,-50,-40,-40,-30,
#     -30,-40,-40,-50,-50,-40,-40,-30,
#     -30,-40,-40,-50,-50,-40,-40,-30,
#     -20,-30,-30,-40,-40,-30,-30,-20,
#     -10,-20,-20,-20,-20,-20,-20,-10,
#      20, 20,  0,  0,  0,  0, 20, 20,
#      20, 30, 10,  0,  0, 10, 30, 20,

#     # King Endgame (Y-symmetric)
#     -50,-40,-40,-30,-30,-40,-40,-50,
#     -40,-20,-10,  0,  0,-10,-20,-40,
#     -40,-10, 20, 30, 30, 20,-10,-40,
#     -30,-10, 30, 40, 40, 30,-10,-30,
#     -30,-10, 30, 40, 40, 30,-10,-30,
#     -40,-10, 20, 30, 30, 20,-10,-40,
#     -40,-30,  0,  0,  0,  0,-30,-40,
#     -50,-40,-40,-30,-30,-40,-40,-50,
# ]).reshape((-1, 8, 8))

# l = np.array([
#     # Pawn Opening (Y-symmetric)
#       0,  0,  0,  0,  0,  0,  0,  0,
#      50, 50, 50, 50, 50, 50, 50, 50,
#      10, 10, 20, 30, 30, 20, 10, 10,
#       5,  5, 10, 25, 25, 10,  5,  5,
#       0,  0,  0, 20, 20,  0,  0,  0,
#       5, -5,-10,  0,  0,-10, -5,  5,
#       5, 10, 10,-20,-20, 10, 10,  5,
#       0,  0,  0,  0,  0,  0,  0,  0,
    
#     # Pawn Endgame (Y-symmetric)
#      50, 50, 50, 50, 50, 50, 50, 50,
#      40, 40, 40, 40, 40, 40, 40, 40,
#      30, 30, 30, 30, 30, 30, 30, 30,
#      20, 20, 20, 20, 20, 20, 20, 20,
#      10, 10, 10, 10, 10, 10, 10, 10,
#       5,  5,  5,  5,  5,  5,  5,  5,
#      -5, -5, -5, -5, -5, -5, -5, -5,
#       0,  0,  0,  0,  0,  0,  0,  0,

#     # Knight Opening (Y-symmetric)
#     -50,-40,-30,-30,-30,-30,-40,-50,
#     -40,-20,  0,  0,  0,  0,-20,-40,
#     -30,  0, 10, 15, 15, 10,  0,-30,
#     -30,  5, 15, 20, 20, 15,  5,-30,
#     -30,  0, 15, 20, 20, 15,  0,-30,
#     -30,  5, 10, 15, 15, 10,  5,-30,
#     -40,-20,  0,  5,  5,  0,-20,-40,
#     -50,-40,-30,-30,-30,-30,-40,-50,

#     # Knight Endgame (Y-symmetric)
#     -50,-40,-30,-30,-30,-30,-40,-50,
#     -40,-20,-10, -5, -5,-10,-20,-40,
#     -30,-10, 10, 15, 15, 10,-10,-30,
#     -30, -5, 15, 20, 20, 15, -5,-30,
#     -30, -5, 15, 20, 20, 15, -5,-30,
#     -30,-10, 10, 15, 15, 10,-10,-30,
#     -40,-20,-10, -5, -5,-10,-20,-40,
#     -50,-40,-30,-30,-30,-30,-40,-50,

#     # Bishop Opening (Y-symmetric)
#     -20,-10,-10,-10,-10,-10,-10,-20,
#     -10,  0,  0,  0,  0,  0,  0,-10,
#     -10,  0,  5, 10, 10,  5,  0,-10,
#     -10,  5,  5, 10, 10,  5,  5,-10,
#     -10,  0, 10, 10, 10, 10,  0,-10,
#     -10, 10, 10, 10, 10, 10, 10,-10,
#     -10,  5,  0,  0,  0,  0,  5,-10,
#     -20,-10,-10,-10,-10,-10,-10,-20,

#     # Bishop Endgame (Y-symmetric)
#     -20,-10,-10,-10,-10,-10,-10,-20,
#     -10,  0,  0,  0,  0,  0,  0,-10,
#     -10,  0, 10, 10, 10, 10,  0,-10,
#     -10,  0, 10, 30, 30, 10,  0,-10,
#     -10,  0, 10, 30, 30, 10,  0,-10,
#     -10,  0, 10, 10, 10, 10,  0,-10,
#     -10,  0,  0,  0,  0,  0,  0,-10,
#     -20,-10,-10,-10,-10,-10,-10,-20,

#     # Rook Opening (Y-symmetric)
#       0,  0,  0,  0,  0,  0,  0,  0,
#       5, 10, 10, 10, 10, 10, 10,  5,
#      -5,  0,  0,  0,  0,  0,  0, -5,
#      -5,  0,  0,  0,  0,  0,  0, -5,
#      -5,  0,  0,  0,  0,  0,  0, -5,
#      -5,  0,  0,  0,  0,  0,  0, -5,
#      -5,  0,  0,  0,  0,  0,  0, -5,
#       0,  0,  0,  5,  5,  0,  0,  0,

#     # Rook Endgame (Y-symmetric)
#      50, 50, 50, 50, 50, 50, 50, 50,
#      50, 50, 50, 50, 50, 50, 50, 50,
#      50, 50, 50, 50, 50, 50, 50, 50,
#      50, 50, 50, 50, 50, 50, 50, 50,
#      50, 50, 50, 50, 50, 50, 50, 50,
#      50, 50, 50, 50, 50, 50, 50, 50,
#      50, 50, 50, 50, 50, 50, 50, 50,
#      50, 50, 50, 50, 50, 50, 50, 50,

#     # Queen Opening (Y-symmetric)
#     -20,-10,-10, -5, -5,-10,-10,-20,
#     -10,  0,  0,  0,  0,  0,  0,-10,
#     -10,  0,  5,  5,  5,  5,  0,-10,
#      -5,  0,  5,  5,  5,  5,  0, -5,
#       0,  0,  5,  5,  5,  5,  0,  0,
#     -10,  5,  5,  5,  5,  5,  5,-10,
#     -10,  0,  5,  0,  0,  5,  0,-10,
#     -20,-10,-10, -5, -5,-10,-10,-20,

#     # Queen Endgame (XY-symmetric)
#     -20,-10,-10, -5, -5,-10,-10,-20,
#     -10,  0,  0,  0,  0,  0,  0,-10,
#     -10,  0,  5,  5,  5,  5,  0,-10,
#      -5,  0,  5, 10, 10,  5,  0, -5,
#      -5,  0,  5, 10, 10,  5,  0, -5,
#     -10,  0,  5,  5,  5,  5,  0,-10,
#     -10,  0,  0,  0,  0,  0,  0,-10,
#     -20,-10,-10, -5, -5,-10,-10,-20,

#     # King Opening (Y-symmetric)
#     -30,-40,-40,-50,-50,-40,-40,-30,
#     -30,-40,-40,-50,-50,-40,-40,-30,
#     -30,-40,-40,-50,-50,-40,-40,-30,
#     -30,-40,-40,-50,-50,-40,-40,-30,
#     -20,-30,-30,-40,-40,-30,-30,-20,
#     -10,-15,-20,-20,-20,-20,-15,-10,
#      20, 20,  0,  0,  0,  0, 20, 20,
#      20, 30, 10,  0,  0, 10, 30, 20,

#     # King Endgame (Y-symmetric)
#     -50,-40,-40,-30,-30,-40,-40,-50,
#     -40,-20,-10,  0,  0,-10,-20,-40,
#     -40,-10, 20, 30, 30, 20,-10,-40,
#     -30,-10, 30, 40, 40, 30,-10,-30,
#     -30,-10, 30, 40, 40, 30,-10,-30,
#     -40,-10, 20, 30, 30, 20,-10,-40,
#     -40,-30,  0,  0,  0,  0,-30,-40,
#     -50,-40,-40,-30,-30,-40,-40,-50,
# ]).reshape((-1, 8, 8))

l = np.array([
    # Null Piece Opening Phase:
      0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,
    # Null Piece Endgame Phase:
      0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,
      0,  0,  0,  0,  0,  0,  0,  0,
    # Pawn Opening Phase:
      0,  0,  0,  0,  0,  0,  0,  0,
     50, 50, 50, 50, 50, 50, 50, 50,
     10, 15, 20, 30, 30, 20, 15, 10,
      5,  5, 10, 25, 25, 10,  5,  5,
      0,  0,  0, 20, 20,  0,  0,  0,
      5, -5,-10,  0,  0,-10, -5,  5,
      5, 10, 10,-20,-20, 10, 10,  5,
      0,  0,  0,  0,  0,  0,  0,  0,
    
    # Pawn Endgame Phase:
     50, 50, 50, 50, 50, 50, 50, 50,
     40, 40, 40, 40, 40, 40, 40, 40,
     30, 30, 30, 30, 30, 30, 30, 30,
     20, 20, 20, 20, 20, 20, 20, 20,
     10, 10, 10, 10, 10, 10, 10, 10,
      5,  5,  5,  5,  5,  5,  5,  5,
     -5, -5, -5, -5, -5, -5, -5, -5,
      0,  0,  0,  0,  0,  0,  0,  0,

    # Knight Opening Phase:
    -50,-40,-30,-30,-30,-30,-40,-50,
    -40,-20,  0,  5,  5,  0,-20,-40,
    -30,  5, 10, 15, 15, 10,  5,-30,
    -30,  0, 15, 20, 20, 15,  0,-30,
    -30,  0, 15, 20, 20, 15,  0,-30,
    -30,  5, 10, 15, 15, 10,  5,-30,
    -40,-20,  0,  5,  5,  0,-20,-40,
    -50,-40,-30,-30,-30,-30,-40,-50,

    # Knight Endgame Phase:
    -50,-40,-30,-30,-30,-30,-40,-50,
    -40,-20,-10, -5, -5,-10,-20,-40,
    -30,-10, 10, 15, 15, 10,-10,-30,
    -30, -5, 15, 20, 20, 15, -5,-30,
    -30, -5, 15, 20, 20, 15, -5,-30,
    -30,-10, 10, 15, 15, 10,-10,-30,
    -40,-20,-10, -5, -5,-10,-20,-40,
    -50,-40,-30,-30,-30,-30,-40,-50,

    # Bishop Opening Phase:
    -20,-10,-10,-10,-10,-10,-10,-20,
    -10,  0,  0,  0,  0,  0,  0,-10,
    -10,  0,  5, 10, 10,  5,  0,-10,
    -10,  5,  5, 10, 10,  5,  5,-10,
    -10,  0, 10, 10, 10, 10,  0,-10,
    -10, 10, 10, 10, 10, 10, 10,-10,
    -10,  5,  0,  0,  0,  0,  5,-10,
    -20,-10,-10,-10,-10,-10,-10,-20,

    # Bishop Endgame Phase:
    -20,-10,-10,-10,-10,-10,-10,-20,
    -10,  0,  0,  0,  0,  0,  0,-10,
    -10,  0, 10, 10, 10, 10,  0,-10,
    -10,  0, 10, 30, 30, 10,  0,-10,
    -10,  0, 10, 30, 30, 10,  0,-10,
    -10,  0, 10, 10, 10, 10,  0,-10,
    -10,  0,  0,  0,  0,  0,  0,-10,
    -20,-10,-10,-10,-10,-10,-10,-20,

    # Rook Opening Phase:
      0,  0,  0,  0,  0,  0,  0,  0,
      5, 10, 10, 10, 10, 10, 10,  5,
     -5,  0,  0,  0,  0,  0,  0, -5,
     -5,  0,  0,  0,  0,  0,  0, -5,
     -5,  0,  0,  0,  0,  0,  0, -5,
     -5,  0,  0,  0,  0,  0,  0, -5,
     -5,  0,  0,  0,  0,  0,  0, -5,
      0,  0,  0,  5,  5,  0,  0,  0,
    
    # Rook Endgame Phase:
     40, 40, 40, 40, 40, 40, 40, 40,
     50, 50, 50, 50, 50, 50, 50, 50,
     40, 40, 40, 40, 40, 40, 40, 40,
     40, 40, 40, 40, 40, 40, 40, 40,
     40, 40, 40, 40, 40, 40, 40, 40,
     40, 40, 40, 40, 40, 40, 40, 40,
     40, 40, 40, 40, 40, 40, 40, 40,
     40, 40, 40, 40, 40, 40, 40, 40,

    # Queen Opening Phase:
    -20,-10,-10, -5, -5,-10,-10,-20,
    -10,  0,  0,  0,  0,  0,  0,-10,
    -10,  0,  5,  5,  5,  5,  0,-10,
     -5,  0,  5, 10, 10,  5,  0, -5,
      0,  0,  5, 10, 10,  5,  0,  0,
    -10,  5,  5,  5,  5,  5,  5,-10,
    -10,  0,  5,  0,  0,  5,  0,-10,
    -20,-10,-10, -5, -5,-10,-10,-20,

    # Queen Endgame Phase:
    -20,-10,-10, -5, -5,-10,-10,-20,
    -10,  0,  0,  0,  0,  0,  0,-10,
    -10,  0,  5,  5,  5,  5,  0,-10,
     -5,  0,  5, 10, 10,  5,  0, -5,
     -5,  0,  5, 10, 10,  5,  0, -5,
    -10,  0,  5,  5,  5,  5,  0,-10,
    -10,  0,  0,  0,  0,  0,  0,-10,
    -20,-10,-10, -5, -5,-10,-10,-20,

    # King Opening Phase:
    -30,-40,-40,-50,-50,-40,-40,-30,
    -30,-40,-40,-50,-50,-40,-40,-30,
    -30,-40,-40,-50,-50,-40,-40,-30,
    -30,-40,-40,-50,-50,-40,-40,-30,
    -20,-30,-30,-40,-40,-30,-30,-20,
    -10,-15,-20,-20,-20,-20,-15,-10,
     20, 20,  0,  0,  0,  0, 20, 20,
     20, 30, 10,  0,  0, 10, 30, 20,
    
    # King Endgame Phase:
    -50,-40,-30,-30,-30,-30,-40,-50,
    -40,-20,-10,  0,  0,-10,-20,-40,
    -40,-10, 20, 30, 30, 20,-10,-40,
    -30,-10, 30, 40, 40, 30,-10,-30,
    -30,-10, 30, 40, 40, 30,-10,-30,
    -40,-10, 20, 30, 30, 20,-10,-40,
    -40,-30,  0,  0,  0,  0,-30,-40,
    -50,-40,-40,-30,-30,-40,-40,-50,
]).reshape((-1, 8, 8))

unique_values = [-50, -40, -30, -20, -15, -10, -5, 0, 5, 10, 15, 20, 25, 30, 40, 50]

print(f"Unique Values: {unique_values}")

for index, matrix in enumerate(l):
    non_equality_matrix = matrix[:, :4] != matrix[:, :3:-1]
    if (non_equality_matrix).any():
        print(f"The following matrix with index {index} is not Y-symmetric:\n\n{matrix}")
        print(non_equality_matrix)

l_new = list(l.flatten().copy())

for i in range(len(l_new)):
    l_new[i] = unique_values.index(l_new[i])

l_new = np.array(l_new).reshape((-1, 8, 8))
compressed = 0
num_bits = 0

outcomes = []

for matrix in l_new:
    matrix = matrix[:, :4]
    for val in matrix.flatten():
        val = int(val)
        compressed = (compressed << 4) | val
        num_bits += 4
        if num_bits == 64:
            outcomes.append(compressed)
            compressed = 0
            num_bits = 0

lines = []

modified_hex = lambda x: "0x" + hex(x)[2:].upper().zfill(16)

for piece in ["Null", "Pawn", "Knight", "Bishop", "Rook", "Queen", "King"]:
    s = ""
    for _ in range(4):
        s += modified_hex(outcomes.pop(0)) + ", "
    lines.append(s + f"// Compressed opening and endgame position indices for {piece} piece types")

lines[0] += " (All squares evaluates to 0)"
print("\n".join(lines))